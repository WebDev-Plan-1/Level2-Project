@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;

// ==========================
// Button Primary Mixin
// ==========================
@mixin button-primary {
  //Set backgroundcolor to primarycolor variable
  background-color: var(--color-primary);
  text-align: center;
  box-shadow: 0 2px 4px var(--color-shadow);
  text-decoration: none;
  font-weight: bold;
  border-radius: v.$border-radius;
  -webkit-border-radius: v.$border-radius;
  -moz-border-radius: v.$border-radius;
  -ms-border-radius: v.$border-radius;
  -o-border-radius: v.$border-radius;
  color: #fff;
  padding: v.$spacing-sm v.$spacing-md;
  &:hover {
    // Darken background color by 10%
    background-color: var(--color-darken-primary);
    box-shadow: 0 4px 8px var(--color-shadow);
  }
  // Responsive Styles
  @media (max-width: v.$breakpoint-mobile) {
    padding: v.$spacing-sm;
    font-size: 0.9rem;
  }
  @media (min-width: v.$breakpoint-mobile) and (max-width: v.$breakpoint-tablet) {
    padding: v.$spacing-sm;
    font-size: 1rem;
  }
  @media (min-width: v.$breakpoint-tablet) and (max-width: v.$breakpoint-desktop) {
    padding: v.$spacing-sm v.$spacing-md;
    font-size: 1.1rem;
  }
}

// If you want, keep the class for direct use
.button-primary {
  @include button-primary;
}

// ==========================
@mixin section-title {
  // font-size: 2.5rem;
  font-family: v.$font-second;
  margin: v.$spacing-lg 0;
  color: var(--color-primary);
  @include m.responsive-font(1.3rem, 2.5rem);
  @include m.transition(0.3s);
  font-weight: bold;
  text-align: center;
  // Responsive adjustments

  @media (max-width: v.$breakpoint-tablet) {
    font-size: 1.8rem;
    margin-bottom: v.$spacing-lg;
  }
  @media (max-width: v.$breakpoint-mobile) {
    font-size: 1.5rem;
    margin-bottom: v.$spacing-md;
  }
  @media (max-width: v.$breakpoint-watch) {
    font-size: 1.3rem;
    // margin-bottom: v.$spacing-md;
  }
}

// If you want, keep the class for direct use
.section-title {
  @include section-title;
}

// ==========================

@mixin not-found {
  text-align: center;
  // color: var(--color-text);
  margin: 2rem 0;
  color: rgb(151, 28, 28);
  font-family: v.$font-second;
  font-weight: 600;
  @include m.responsive-font(1rem, 1.2rem);
}

.not-found {
  @include not-found;
}

@mixin empty-section {
  padding: v.$spacing-md 0;
}
.empty-section {
  @include empty-section;
}

// =============Lazy Images=================== //

/* Image wrapper: preserve aspect, show placeholder background */
.img-wrap {
  /*create a relative context for overlay and image*/
  position: relative;
  /*placeholder background color before image loads*/
  background: var(--color-bg);
  /*keepoverflowhiddenforroundedcorners*/
  overflow: hidden;
  width: 100%;
  height: 200px;
  /*optionalradius*/
  @include m.border-radius(8px);

  /* Lazy images base */
  .lazy-img {
    /*ensure image covers the wrapper*/
    width: 100%;
    height: 100%;
    object-fit: cover;
    /*make it a block-level element*/
    display: block;
    /*show as blur redinitially*/
    filter: blur(16px) scale(1.02);
    -webkit-filter: blur(16px) scale(1.02);
    opacity: 0;
    /*smooth transition for opacity and filter change*/
    transition:
      filter 0.4s ease,
      opacity 0.4s ease;
    -webkit-transition:
      filter 0.4s ease,
      opacity 0.4s ease;
    -moz-transition:
      filter 0.4s ease,
      opacity 0.4s ease;
    -ms-transition:
      filter 0.4s ease,
      opacity 0.4s ease;
    -o-transition:
      filter 0.4s ease,
      opacity 0.4s ease;

    /* When image finished loading: remove blur and show image */
    &.lazy-loaded {
      /* remove the blur effect */
      filter: none;
      /* full opacity */
      opacity: 1;
    }
    /* Small devices: reduce blur scale if needed */
    @media (max-width: v.$breakpoint-mobile) {
      & {
        filter: blur(10px) scale(1.01);
      }
    }
  }
  /* Skeleton shimmer overlay (optional) */
  &::after {
    /* shimmering bar to indicate loading */
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.35) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: translateX(-100%);
    transition: transform 1.2s linear;
    /* show shimmer while blurred (not after loaded) */
    pointer-events: none;
  }
  /* Remove shimmer when image loaded */
  .lazy-img.lazy-loaded + &::after,
  & .lazy-img.lazy-loaded ~ &::after {
    transform: translateX(100%);
    opacity: 0;
  }
}

// ============================ //

// =============App Loader=================== //
/* Loader full screen */
#loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #fff; /* or dark if using dark mode */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999; /* stay above everything */
  /* Spinner animation */
  .spinner {
    border: 6px solid #f3f3f3;
    border-top: 6px solid #3498db; /* brand color */
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
